package com.totalplay.alarmtype.tprovisioningux;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.5.0
 * 2022-02-15T13:32:30.744-06:00
 * Generated source version: 3.5.0
 *
 */
@WebServiceClient(name = "BPEL",
                  wsdlLocation = "http://10.213.8.248/TprovisioningABCws/BPEL.asmx?wsdl",
                  targetNamespace = "http://tempuri.org/")
public class BPEL extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "BPEL");
    public final static QName BPELSoap = new QName("http://tempuri.org/", "BPELSoap");
    public final static QName BPELSoap12 = new QName("http://tempuri.org/", "BPELSoap12");
    static {
        URL url = null;
        try {
            url = new URL("http://10.213.8.248/TprovisioningABCws/BPEL.asmx?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(BPEL.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://10.213.8.248/TprovisioningABCws/BPEL.asmx?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public BPEL(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public BPEL(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BPEL() {
        super(WSDL_LOCATION, SERVICE);
    }

    public BPEL(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public BPEL(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public BPEL(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns BPELSoap
     */
    @WebEndpoint(name = "BPELSoap")
    public BPELSoap getBPELSoap() {
        return super.getPort(BPELSoap, BPELSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BPELSoap
     */
    @WebEndpoint(name = "BPELSoap")
    public BPELSoap getBPELSoap(WebServiceFeature... features) {
        return super.getPort(BPELSoap, BPELSoap.class, features);
    }


    /**
     *
     * @return
     *     returns BPELSoap
     */
    @WebEndpoint(name = "BPELSoap12")
    public BPELSoap getBPELSoap12() {
        return super.getPort(BPELSoap12, BPELSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BPELSoap
     */
    @WebEndpoint(name = "BPELSoap12")
    public BPELSoap getBPELSoap12(WebServiceFeature... features) {
        return super.getPort(BPELSoap12, BPELSoap.class, features);
    }

}
